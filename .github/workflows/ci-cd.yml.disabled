name: Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/test.yml'
      - 'examples/**'

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build

  version-and-publish:
    name: Version Bump and Publish
    needs: test
    runs-on: ubuntu-latest
    # Only run on push to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    permissions:
      contents: write
      packages: write
      actions: write
    
    steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
      continue-on-error: true
      
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Need full history for version bump
        fetch-depth: 0
        # Use app token if available, otherwise use PAT, fallback to GITHUB_TOKEN
        token: ${{ steps.generate_token.outputs.token || secrets.GH_PAT || secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Get current version
      id: current_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        
    - name: Bump version
      id: version_bump
      run: |
        # Bump patch version without committing
        npm version patch --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
        
    - name: Build
      run: npm run build
      
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Commit and push version bump
      run: |
        git add package.json package-lock.json
        git commit -m "chore(release): ${{ steps.version_bump.outputs.new_version }} [skip ci]"
        git tag "v${{ steps.version_bump.outputs.new_version }}"
        
        # Configure remote with token
        git remote set-url origin https://x-access-token:${{ steps.generate_token.outputs.token || secrets.GH_PAT || secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        
        # Push changes
        git push origin main --follow-tags
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token || secrets.GH_PAT || secrets.GITHUB_TOKEN }}